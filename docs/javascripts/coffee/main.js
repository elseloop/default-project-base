// Generated by CoffeeScript 1.7.1
(function() {
  var Navigator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Navigator = (function() {
    function Navigator(el) {
      this.el = el;
      this.navigate_to = __bind(this.navigate_to, this);
      this.fixiate = __bind(this.fixiate, this);
      this.calculate_section_offsets = __bind(this.calculate_section_offsets, this);
      this.change_selected = __bind(this.change_selected, this);
      this.spy = __bind(this.spy, this);
      this.links = this.el.find('a[data-target]');
      this.role_links = $('a[role=nav_link]');
      this.fix_offset = this.el.offset().top + 50;
      this.fixed = false;
      this.fix_class = 'fix';
      this.sections = $('#content .section');
      this.section_offsets = {};
      this.selected = '';
      this.nav_height = this.el.height();
      this.calculate_section_offsets();
      this.links.click((function(_this) {
        return function(e) {
          var $el;
          e.preventDefault();
          $el = $(e.target);
          return _this.navigate_to($el.data('target'), $el);
        };
      })(this));
      this.role_links.click((function(_this) {
        return function(e) {
          var $el;
          e.preventDefault();
          $el = $(e.target);
          return _this.navigate_to($el.data('target'), $el);
        };
      })(this));
      $(window).scroll((function(_this) {
        return function(e) {
          var scrolltop;
          scrolltop = $(window).scrollTop();
          if (!_this.fixed && scrolltop >= _this.fix_offset) {
            _this.fixiate();
          } else if (_this.fixed && scrolltop < _this.fix_offset) {
            _this.fixiate(true);
          }
          return _this.spy(scrolltop);
        };
      })(this));
    }

    Navigator.prototype.spy = function(top) {
      var select_section;
      if (top == null) {
        top = null;
      }
      if (!top) {
        top = $(window).scrollTop();
      }
      select_section = "index";
      _.each(this.section_offsets, function(section_top, name) {
        if (section_top > top && select_section === "index") {
          return select_section = name;
        }
      });
      if (select_section !== "index") {
        return this.change_selected(select_section);
      }
    };

    Navigator.prototype.change_selected = function(name) {
      var baseUrl;
      if (name === this.selected) {
        return;
      }
      this.selected = name;
      this.el.find('.active').removeClass('active');
      this.el.find("[data-target=" + this.selected + "]").parent('li').addClass('active');
      baseUrl = window.location.href.split('#')[0];
      return window.location.replace(baseUrl + ("#" + this.selected));
    };

    Navigator.prototype.images_loaded = function() {
      var all_loaded;
      all_loaded = true;
      this.sections.each((function(_this) {
        return function(i, el) {
          if (!all_loaded) {
            return;
          }
          if ($(el).find('img').length) {
            return $(el).find('img').each(function(k, img) {
              if (!img.complete || img.naturalWidth === "undefined" || img.naturalWidth === 0) {
                return all_loaded = false;
              }
            });
          }
        };
      })(this));
      return all_loaded;
    };

    Navigator.prototype.calculate_section_offsets = function() {
      if (!this.images_loaded()) {
        setTimeout((function(_this) {
          return function() {
            return _this.calculate_section_offsets();
          };
        })(this), 100);
        return;
      }
      return this.sections.each((function(_this) {
        return function(i, e) {
          return _this.section_offsets[$(e).data('name')] = $(e).offset().top;
        };
      })(this));
    };

    Navigator.prototype.fixiate = function(undo) {
      if (undo == null) {
        undo = false;
      }
      this.fixed = !undo;
      if (this.fixed) {
        return this.el.addClass(this.fix_class);
      } else {
        return this.el.removeClass(this.fix_class);
      }
    };

    Navigator.prototype.navigate_to = function(target) {
      var $target;
      if (!target) {
        return;
      }
      $target = target === "index" ? $('body') : $(".section[data-name=" + target + "]");
      if (!$target.length) {
        return;
      }
      _gaq.push(['_trackEvent', 'navigate', target]);
      return $('html,body').animate({
        scrollTop: $target.offset().top - 50
      });
    };

    return Navigator;

  })();

  $(function() {
    var $main_nav, $win, nav;
    $win = $(window);
    $main_nav = $('#main-nav');
    $('pre').each(function(i, e) {
      return hljs.highlightBlock(e);
    });
    nav = new Navigator($main_nav);
    if (window.location.hash.length) {
      return setTimeout(function() {
        return nav.navigate_to(window.location.hash.replace("#", ""));
      }, 350);
    }
  });

}).call(this);
